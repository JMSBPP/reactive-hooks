{"abi":[{"type":"function","name":"and","inputs":[{"name":"offsets","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"arbitraryStaticCall","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"eq","inputs":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"gt","inputs":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lt","inputs":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"not","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"or","inputs":[{"name":"offsets","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"error","name":"ArbitraryStaticCallFailed","inputs":[]}],"bytecode":{"object":"0x6080604052348015600e575f80fd5b506106a98061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063bf15fcd811610059578063bf15fcd81461010f578063bf7979591461013f578063bfa751431461016f578063ca4ece221461019f5761007b565b80634f38e2b81461007f5780636fe7b0ba146100af57806374261145146100df575b5f80fd5b61009960048036038101906100949190610477565b6101cf565b6040516100a691906104ee565b60405180910390f35b6100c960048036038101906100c49190610477565b6101f8565b6040516100d691906104ee565b60405180910390f35b6100f960048036038101906100f49190610477565b610221565b60405161010691906104ee565b60405180910390f35b61012960048036038101906101249190610561565b610293565b60405161013691906105cd565b60405180910390f35b610159600480360381019061015491906105e6565b6102e8565b60405161016691906104ee565b60405180910390f35b61018960048036038101906101849190610477565b610310565b60405161019691906104ee565b60405180910390f35b6101b960048036038101906101b49190610477565b610383565b6040516101c691906104ee565b60405180910390f35b5f805f6101dd3086866103ac565b915091508180156101ed57508581115b925050509392505050565b5f805f6102063086866103ac565b9150915081801561021657508581145b925050509392505050565b5f805f5b5f8663ffffffff1691508114610286575f806102523088888790879261024d93929190610639565b6103ac565b915091508180156102635750600181145b1561027557600194505050505061028c565b8293505050602086901c9550610225565b505f9150505b9392505050565b5f805f6102a18686866103ac565b91509150816102dc576040517f1f1b8f6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80925050509392505050565b5f805f6102f63086866103ac565b9150915081801561030657505f81145b9250505092915050565b5f805f5b5f8663ffffffff1691508114610375575f806103413088888790879261033c93929190610639565b6103ac565b91509150811580610353575060018114155b15610364575f94505050505061037c565b8293505050602086901c9550610314565b5060019150505b9392505050565b5f805f6103913086866103ac565b915091508180156103a157508581105b925050509392505050565b5f806040518385823760205f8583895afa925060203d148316925082156103d2575f5191505b50935093915050565b5f80fd5b5f80fd5b5f819050919050565b6103f5816103e3565b81146103ff575f80fd5b50565b5f81359050610410816103ec565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261043757610436610416565b5b8235905067ffffffffffffffff8111156104545761045361041a565b5b6020830191508360018202830111156104705761046f61041e565b5b9250929050565b5f805f6040848603121561048e5761048d6103db565b5b5f61049b86828701610402565b935050602084013567ffffffffffffffff8111156104bc576104bb6103df565b5b6104c886828701610422565b92509250509250925092565b5f8115159050919050565b6104e8816104d4565b82525050565b5f6020820190506105015f8301846104df565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61053082610507565b9050919050565b61054081610526565b811461054a575f80fd5b50565b5f8135905061055b81610537565b92915050565b5f805f60408486031215610578576105776103db565b5b5f6105858682870161054d565b935050602084013567ffffffffffffffff8111156105a6576105a56103df565b5b6105b286828701610422565b92509250509250925092565b6105c7816103e3565b82525050565b5f6020820190506105e05f8301846105be565b92915050565b5f80602083850312156105fc576105fb6103db565b5b5f83013567ffffffffffffffff811115610619576106186103df565b5b61062585828601610422565b92509250509250929050565b5f80fd5b5f80fd5b5f808585111561064c5761064b610631565b5b8386111561065d5761065c610635565b5b600185028301915084860390509450949250505056fea2646970667358221220db81c91222a0a7a206c2e1a3aeae28a155cf5a598e943697210444c316a6ae2d64736f6c634300081a0033","sourceMap":"152:3758:98:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063bf15fcd811610059578063bf15fcd81461010f578063bf7979591461013f578063bfa751431461016f578063ca4ece221461019f5761007b565b80634f38e2b81461007f5780636fe7b0ba146100af57806374261145146100df575b5f80fd5b61009960048036038101906100949190610477565b6101cf565b6040516100a691906104ee565b60405180910390f35b6100c960048036038101906100c49190610477565b6101f8565b6040516100d691906104ee565b60405180910390f35b6100f960048036038101906100f49190610477565b610221565b60405161010691906104ee565b60405180910390f35b61012960048036038101906101249190610561565b610293565b60405161013691906105cd565b60405180910390f35b610159600480360381019061015491906105e6565b6102e8565b60405161016691906104ee565b60405180910390f35b61018960048036038101906101849190610477565b610310565b60405161019691906104ee565b60405180910390f35b6101b960048036038101906101b49190610477565b610383565b6040516101c691906104ee565b60405180910390f35b5f805f6101dd3086866103ac565b915091508180156101ed57508581115b925050509392505050565b5f805f6102063086866103ac565b9150915081801561021657508581145b925050509392505050565b5f805f5b5f8663ffffffff1691508114610286575f806102523088888790879261024d93929190610639565b6103ac565b915091508180156102635750600181145b1561027557600194505050505061028c565b8293505050602086901c9550610225565b505f9150505b9392505050565b5f805f6102a18686866103ac565b91509150816102dc576040517f1f1b8f6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80925050509392505050565b5f805f6102f63086866103ac565b9150915081801561030657505f81145b9250505092915050565b5f805f5b5f8663ffffffff1691508114610375575f806103413088888790879261033c93929190610639565b6103ac565b91509150811580610353575060018114155b15610364575f94505050505061037c565b8293505050602086901c9550610314565b5060019150505b9392505050565b5f805f6103913086866103ac565b915091508180156103a157508581105b925050509392505050565b5f806040518385823760205f8583895afa925060203d148316925082156103d2575f5191505b50935093915050565b5f80fd5b5f80fd5b5f819050919050565b6103f5816103e3565b81146103ff575f80fd5b50565b5f81359050610410816103ec565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261043757610436610416565b5b8235905067ffffffffffffffff8111156104545761045361041a565b5b6020830191508360018202830111156104705761046f61041e565b5b9250929050565b5f805f6040848603121561048e5761048d6103db565b5b5f61049b86828701610402565b935050602084013567ffffffffffffffff8111156104bc576104bb6103df565b5b6104c886828701610422565b92509250509250925092565b5f8115159050919050565b6104e8816104d4565b82525050565b5f6020820190506105015f8301846104df565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61053082610507565b9050919050565b61054081610526565b811461054a575f80fd5b50565b5f8135905061055b81610537565b92915050565b5f805f60408486031215610578576105776103db565b5b5f6105858682870161054d565b935050602084013567ffffffffffffffff8111156105a6576105a56103df565b5b6105b286828701610422565b92509250509250925092565b6105c7816103e3565b82525050565b5f6020820190506105e05f8301846105be565b92915050565b5f80602083850312156105fc576105fb6103db565b5b5f83013567ffffffffffffffff811115610619576106186103df565b5b61062585828601610422565b92509250509250929050565b5f80fd5b5f80fd5b5f808585111561064c5761064b610631565b5b8386111561065d5761065c610635565b5b600185028301915084860390509450949250505056fea2646970667358221220db81c91222a0a7a206c2e1a3aeae28a155cf5a598e943697210444c316a6ae2d64736f6c634300081a0033","sourceMap":"152:3758:98:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1956:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;364:438;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3138:252;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1549:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;951:440;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2387:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2819;2887:4;2904:12;2918:11;2933:39;2960:4;2967;;2933:18;:39::i;:::-;2903:69;;;;2989:7;:22;;;;;3006:5;3000:3;:11;2989:22;2982:29;;;;2819:199;;;;;:::o;1956:200::-;2024:4;2041:12;2055:11;2070:39;2097:4;2104;;2070:18;:39::i;:::-;2040:69;;;;2126:7;:23;;;;;2144:5;2137:3;:12;2126:23;2119:30;;;;1956:200;;;;;:::o;364:438::-;434:4;450:16;481:15;476:298;529:1;516:7;499:25;;;;;498:32;476:298;;563:12;577:11;592:57;619:4;626;;631:8;626:22;640:7;626:22;;;;;;;:::i;:::-;592:18;:57::i;:::-;562:87;;;;667:7;:19;;;;;685:1;678:3;:8;667:19;663:69;;;713:4;706:11;;;;;;;;663:69;756:7;745:18;;548:226;;544:2;532:14;;;;;476:298;;;;790:5;783:12;;;364:438;;;;;;:::o;3138:252::-;3224:7;3244:12;3258:11;3273:32;3292:6;3300:4;;3273:18;:32::i;:::-;3243:62;;;;3320:7;3315:48;;3336:27;;;;;;;;;;;;;;3315:48;3380:3;3373:10;;;;3138:252;;;;;:::o;1549:182::-;1603:4;1620:12;1634:11;1649:39;1676:4;1683;;1649:18;:39::i;:::-;1619:69;;;;1705:7;:19;;;;;1723:1;1716:3;:8;1705:19;1698:26;;;;1549:182;;;;:::o;951:440::-;1022:4;1038:16;1069:15;1064:300;1117:1;1104:7;1087:25;;;;;1086:32;1064:300;;1151:12;1165:11;1180:57;1207:4;1214;;1219:8;1214:22;1228:7;1214:22;;;;;;;:::i;:::-;1180:18;:57::i;:::-;1150:87;;;;1256:7;1255:8;:20;;;;1274:1;1267:3;:8;;1255:20;1251:71;;;1302:5;1295:12;;;;;;;;1251:71;1346:7;1335:18;;1136:228;;1132:2;1120:14;;;;;1064:300;;;;1380:4;1373:11;;;951:440;;;;;;:::o;2387:199::-;2455:4;2472:12;2486:11;2501:39;2528:4;2535;;2501:18;:39::i;:::-;2471:69;;;;2557:7;:22;;;;;2574:5;2568:3;:11;2557:22;2550:29;;;;2387:199;;;;;:::o;3396:512::-;3483:12;3497:11;3619:4;3613:11;3669;3656;3651:3;3638:43;3754:4;3749:3;3736:11;3731:3;3723:6;3716:5;3705:54;3694:65;;3817:2;3799:16;3796:24;3787:7;3783:38;3772:49;;3837:7;3834:58;;;3876:1;3870:8;3863:15;;3834:58;3545:357;3396:512;;;;;;:::o;88:117:106:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:117::-;799:1;796;789:12;813:117;922:1;919;912:12;936:117;1045:1;1042;1035:12;1072:552;1129:8;1139:6;1189:3;1182:4;1174:6;1170:17;1166:27;1156:122;;1197:79;;:::i;:::-;1156:122;1310:6;1297:20;1287:30;;1340:18;1332:6;1329:30;1326:117;;;1362:79;;:::i;:::-;1326:117;1476:4;1468:6;1464:17;1452:29;;1530:3;1522:4;1514:6;1510:17;1500:8;1496:32;1493:41;1490:128;;;1537:79;;:::i;:::-;1490:128;1072:552;;;;;:::o;1630:672::-;1709:6;1717;1725;1774:2;1762:9;1753:7;1749:23;1745:32;1742:119;;;1780:79;;:::i;:::-;1742:119;1900:1;1925:53;1970:7;1961:6;1950:9;1946:22;1925:53;:::i;:::-;1915:63;;1871:117;2055:2;2044:9;2040:18;2027:32;2086:18;2078:6;2075:30;2072:117;;;2108:79;;:::i;:::-;2072:117;2221:64;2277:7;2268:6;2257:9;2253:22;2221:64;:::i;:::-;2203:82;;;;1998:297;1630:672;;;;;:::o;2308:90::-;2342:7;2385:5;2378:13;2371:21;2360:32;;2308:90;;;:::o;2404:109::-;2485:21;2500:5;2485:21;:::i;:::-;2480:3;2473:34;2404:109;;:::o;2519:210::-;2606:4;2644:2;2633:9;2629:18;2621:26;;2657:65;2719:1;2708:9;2704:17;2695:6;2657:65;:::i;:::-;2519:210;;;;:::o;2735:126::-;2772:7;2812:42;2805:5;2801:54;2790:65;;2735:126;;;:::o;2867:96::-;2904:7;2933:24;2951:5;2933:24;:::i;:::-;2922:35;;2867:96;;;:::o;2969:122::-;3042:24;3060:5;3042:24;:::i;:::-;3035:5;3032:35;3022:63;;3081:1;3078;3071:12;3022:63;2969:122;:::o;3097:139::-;3143:5;3181:6;3168:20;3159:29;;3197:33;3224:5;3197:33;:::i;:::-;3097:139;;;;:::o;3242:672::-;3321:6;3329;3337;3386:2;3374:9;3365:7;3361:23;3357:32;3354:119;;;3392:79;;:::i;:::-;3354:119;3512:1;3537:53;3582:7;3573:6;3562:9;3558:22;3537:53;:::i;:::-;3527:63;;3483:117;3667:2;3656:9;3652:18;3639:32;3698:18;3690:6;3687:30;3684:117;;;3720:79;;:::i;:::-;3684:117;3833:64;3889:7;3880:6;3869:9;3865:22;3833:64;:::i;:::-;3815:82;;;;3610:297;3242:672;;;;;:::o;3920:118::-;4007:24;4025:5;4007:24;:::i;:::-;4002:3;3995:37;3920:118;;:::o;4044:222::-;4137:4;4175:2;4164:9;4160:18;4152:26;;4188:71;4256:1;4245:9;4241:17;4232:6;4188:71;:::i;:::-;4044:222;;;;:::o;4272:527::-;4342:6;4350;4399:2;4387:9;4378:7;4374:23;4370:32;4367:119;;;4405:79;;:::i;:::-;4367:119;4553:1;4542:9;4538:17;4525:31;4583:18;4575:6;4572:30;4569:117;;;4605:79;;:::i;:::-;4569:117;4718:64;4774:7;4765:6;4754:9;4750:22;4718:64;:::i;:::-;4700:82;;;;4496:296;4272:527;;;;;:::o;4805:117::-;4914:1;4911;4904:12;4928:117;5037:1;5034;5027:12;5051:469;5156:9;5167;5205:8;5193:10;5190:24;5187:111;;;5217:79;;:::i;:::-;5187:111;5323:6;5313:8;5310:20;5307:107;;;5333:79;;:::i;:::-;5307:107;5464:1;5452:10;5448:18;5440:6;5436:31;5423:44;;5503:10;5493:8;5489:25;5476:38;;5051:469;;;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"and(uint256,bytes)":"bfa75143","arbitraryStaticCall(address,bytes)":"bf15fcd8","eq(uint256,bytes)":"6fe7b0ba","gt(uint256,bytes)":"4f38e2b8","lt(uint256,bytes)":"ca4ece22","not(bytes)":"bf797959","or(uint256,bytes)":"74261145"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ArbitraryStaticCallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offsets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"and\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"arbitraryStaticCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"eq\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"gt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"lt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"not\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offsets\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"or\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"and(uint256,bytes)\":{\"returns\":{\"_0\":\"Result True if calls to all targets returned True. Otherwise, false\"}},\"arbitraryStaticCall(address,bytes)\":{\"returns\":{\"_0\":\"Result Bytes transmuted to uint256\"}},\"eq(uint256,bytes)\":{\"params\":{\"value\":\"Value to test\"},\"returns\":{\"_0\":\"Result True if call to target returns the same value as `value`. Otherwise, false\"}},\"gt(uint256,bytes)\":{\"params\":{\"value\":\"Value to test\"},\"returns\":{\"_0\":\"Result True if call to target returns value which is bigger than `value`. Otherwise, false\"}},\"lt(uint256,bytes)\":{\"params\":{\"value\":\"Value to test\"},\"returns\":{\"_0\":\"Result True if call to target returns value which is lower than `value`. Otherwise, false\"}},\"not(bytes)\":{\"returns\":{\"_0\":\"Result True if call to target returns 0. Otherwise, false\"}},\"or(uint256,bytes)\":{\"returns\":{\"_0\":\"Result True if call to any target returned True. Otherwise, false\"}}},\"title\":\"A helper contract for executing boolean functions on arbitrary target call results\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"and(uint256,bytes)\":{\"notice\":\"Calls every target with corresponding data\"},\"arbitraryStaticCall(address,bytes)\":{\"notice\":\"Performs an arbitrary call to target with data\"},\"eq(uint256,bytes)\":{\"notice\":\"Calls target with specified data and tests if it's equal to the value\"},\"gt(uint256,bytes)\":{\"notice\":\"Calls target with specified data and tests if it's bigger than value\"},\"lt(uint256,bytes)\":{\"notice\":\"Calls target with specified data and tests if it's lower than value\"},\"not(bytes)\":{\"notice\":\"Calls target with specified data and tests if it's equal to 0\"},\"or(uint256,bytes)\":{\"notice\":\"Calls every target with corresponding data\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/helpers/PredicateHelper.sol\":\"PredicateHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@1inch-limit-order/=lib/limit-order-protocol/contracts/\",\":@Cyfrin/foundry-devops/=lib/foundry-devops/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@reactive-network/=lib/reactive-smart-contract-demos/lib/reactive-lib/src/\",\":@uniswap/universal-router/=lib/universal-router/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":Non-Locking-FlashLoan/=lib/Non-Locking-FlashLoan/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":limit-order-protocol/=lib/limit-order-protocol/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":reactive-lib/=lib/reactive-smart-contract-demos/lib/reactive-lib/src/\",\":reactive-smart-contract-demos/=lib/reactive-smart-contract-demos/src/\",\":solmate/=lib/solmate/\",\":universal-router/=lib/universal-router/\",\":v2-core/=lib/reactive-smart-contract-demos/lib/v2-core/contracts/\",\":v2-periphery/=lib/reactive-smart-contract-demos/lib/v2-periphery/contracts/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"src/helpers/PredicateHelper.sol\":{\"keccak256\":\"0x508d051601aa303e601e6c2d5f83bf0de154af55e5dc91f4898e35e543c6a459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86d172f6a0dff4595b015ac6c71d288c0117557d8e9e518cdfa496a9dc8ae3c1\",\"dweb:/ipfs/QmVnyGtvxodLM3GhuQYQNhgtUMTehRqkv5vCijDFNBwLmb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ArbitraryStaticCallFailed"},{"inputs":[{"internalType":"uint256","name":"offsets","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"and","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"arbitraryStaticCall","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"eq","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"gt","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"lt","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"not","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"offsets","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"or","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"and(uint256,bytes)":{"returns":{"_0":"Result True if calls to all targets returned True. Otherwise, false"}},"arbitraryStaticCall(address,bytes)":{"returns":{"_0":"Result Bytes transmuted to uint256"}},"eq(uint256,bytes)":{"params":{"value":"Value to test"},"returns":{"_0":"Result True if call to target returns the same value as `value`. Otherwise, false"}},"gt(uint256,bytes)":{"params":{"value":"Value to test"},"returns":{"_0":"Result True if call to target returns value which is bigger than `value`. Otherwise, false"}},"lt(uint256,bytes)":{"params":{"value":"Value to test"},"returns":{"_0":"Result True if call to target returns value which is lower than `value`. Otherwise, false"}},"not(bytes)":{"returns":{"_0":"Result True if call to target returns 0. Otherwise, false"}},"or(uint256,bytes)":{"returns":{"_0":"Result True if call to any target returned True. Otherwise, false"}}},"version":1},"userdoc":{"kind":"user","methods":{"and(uint256,bytes)":{"notice":"Calls every target with corresponding data"},"arbitraryStaticCall(address,bytes)":{"notice":"Performs an arbitrary call to target with data"},"eq(uint256,bytes)":{"notice":"Calls target with specified data and tests if it's equal to the value"},"gt(uint256,bytes)":{"notice":"Calls target with specified data and tests if it's bigger than value"},"lt(uint256,bytes)":{"notice":"Calls target with specified data and tests if it's lower than value"},"not(bytes)":{"notice":"Calls target with specified data and tests if it's equal to 0"},"or(uint256,bytes)":{"notice":"Calls every target with corresponding data"}},"version":1}},"settings":{"remappings":["@1inch-limit-order/=lib/limit-order-protocol/contracts/","@Cyfrin/foundry-devops/=lib/foundry-devops/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/openzeppelin-contracts/","@reactive-network/=lib/reactive-smart-contract-demos/lib/reactive-lib/src/","@uniswap/universal-router/=lib/universal-router/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","Non-Locking-FlashLoan/=lib/Non-Locking-FlashLoan/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-devops/=lib/foundry-devops/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","limit-order-protocol/=lib/limit-order-protocol/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","reactive-lib/=lib/reactive-smart-contract-demos/lib/reactive-lib/src/","reactive-smart-contract-demos/=lib/reactive-smart-contract-demos/src/","solmate/=lib/solmate/","universal-router/=lib/universal-router/","v2-core/=lib/reactive-smart-contract-demos/lib/v2-core/contracts/","v2-periphery/=lib/reactive-smart-contract-demos/lib/v2-periphery/contracts/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/helpers/PredicateHelper.sol":"PredicateHelper"},"evmVersion":"cancun","libraries":{}},"sources":{"src/helpers/PredicateHelper.sol":{"keccak256":"0x508d051601aa303e601e6c2d5f83bf0de154af55e5dc91f4898e35e543c6a459","urls":["bzz-raw://86d172f6a0dff4595b015ac6c71d288c0117557d8e9e518cdfa496a9dc8ae3c1","dweb:/ipfs/QmVnyGtvxodLM3GhuQYQNhgtUMTehRqkv5vCijDFNBwLmb"],"license":"MIT"}},"version":1},"id":98}